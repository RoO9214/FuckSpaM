local function modadd(msg)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)    -- superuser and admins only (because sudo are always has privilege)    if not is_admin(msg) then   if not lang then        return '_You are not bot admin_'else     return 'شما مدیر ربات نمیباشید'    endend    local data = load_data(_config.moderation.data)  if data[tostring(msg.chat_id_)] thenif not lang then   return '_Group is already added_'elsereturn 'گروه در لیست گروه های مدیریتی ربات هم اکنون موجود است'  endend        -- create data array in moderation.json      data[tostring(msg.chat_id_)] = {              owners = {},      mods ={},      banned ={},      is_silent_users ={},      filterlist ={},      settings = {          lock_link = 'yes',          lock_tag = 'yes',          lock_spam = 'yes',          lock_webpage = 'no',          lock_markdown = 'no',          flood = 'yes',          lock_bots = 'yes',          welcome = 'yes',     mute_fwd = 'no',                  mute_audio = 'no',                  mute_video = 'no',                  mute_contact = 'no',                  mute_text = 'no',                  mute_photos = 'no',                  mute_gif = 'no',                  mute_loc = 'no',                  mute_doc = 'no',                  mute_sticker = 'no',                  mute_voice = 'no',                   mute_all = 'no',       mute_game = 'no',       mute_tgservice = 'no'                 },        }  save_data(_config.moderation.data, data)      local groups = 'groups'      if not data[tostring(groups)] then        data[tostring(groups)] = {}        save_data(_config.moderation.data, data)      end      data[tostring(groups)][tostring(msg.chat_id_)] = msg.chat_id_      save_data(_config.moderation.data, data)    if not lang then  return '*Group has been added*'else  return 'گروه با موفقیت به لیست گروه های مدیریتی ربات افزوده شد'endendlocal function modrem(msg)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)    -- superuser and admins only (because sudo are always has privilege)      if not is_admin(msg) then     if not lang then        return '_You are not bot admin_'   else        return 'شما مدیر ربات نمیباشید'    end   end    local data = load_data(_config.moderation.data)    local receiver = msg.chat_id_  if not data[tostring(msg.chat_id_)] then  if not lang then    return '_Group is not added_'else    return 'گروه به لیست گروه های مدیریتی ربات اضافه نشده است'   end  end  data[tostring(msg.chat_id_)] = nil  save_data(_config.moderation.data, data)     local groups = 'groups'      if not data[tostring(groups)] then        data[tostring(groups)] = nil        save_data(_config.moderation.data, data)      end data[tostring(groups)][tostring(msg.chat_id_)] = nil      save_data(_config.moderation.data, data) if not lang then  return '*Group has been removed*' else  return 'گروه با موفیت از لیست گروه های مدیریتی ربات حذف شد'endendlocal function filter_word(msg, word)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)local data = load_data(_config.moderation.data)  if not data[tostring(msg.chat_id_)]['filterlist'] then    data[tostring(msg.chat_id_)]['filterlist'] = {}    save_data(_config.moderation.data, data)    endif data[tostring(msg.chat_id_)]['filterlist'][(word)] then   if not lang then         return "_Word_ *"..word.."* _is already filtered_"            else         return "_کلمه_ *"..word.."* _از قبل فیلتر بود_"    endend   data[tostring(msg.chat_id_)]['filterlist'][(word)] = true     save_data(_config.moderation.data, data)   if not lang then         return "_Word_ *"..word.."* _added to filtered words list_"            else         return "_کلمه_ *"..word.."* _به لیست کلمات فیلتر شده اضافه شد_"    endendlocal function unfilter_word(msg, word)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) local data = load_data(_config.moderation.data)  if not data[tostring(msg.chat_id_)]['filterlist'] then    data[tostring(msg.chat_id_)]['filterlist'] = {}    save_data(_config.moderation.data, data)    end      if data[tostring(msg.chat_id_)]['filterlist'][word] then      data[tostring(msg.chat_id_)]['filterlist'][(word)] = nil       save_data(_config.moderation.data, data)       if not lang then         return "_Word_ *"..word.."* _removed from filtered words list_"       elseif lang then         return "_کلمه_ *"..word.."* _از لیست کلمات فیلتر شده حذف شد_"     end      else       if not lang then         return "_Word_ *"..word.."* _is not filtered_"       elseif lang then         return "_کلمه_ *"..word.."* _از قبل فیلتر نبود_"      end   endendlocal function modlist(msg)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)    local data = load_data(_config.moderation.data)    local i = 1  if not data[tostring(msg.chat_id_)] then  if not lang then    return "_Group is not added_" else    return "گروه به لیست گروه های مدیریتی ربات اضافه نشده است"  end end  -- determine if table is empty  if next(data[tostring(msg.chat_id_)]['mods']) == nil then --fix way  if not lang then    return "_No_ *moderator* _in this group_"else   return "در حال حاضر هیچ مدیری برای گروه انتخاب نشده است"  endendif not lang then   message = '*List of moderators :*\n'else   message = '*لیست مدیران گروه :*\n'end  for k,v in pairs(data[tostring(msg.chat_id_)]['mods'])do    message = message ..i.. '- '..v..' [' ..k.. '] \n'   i = i + 1end  return messageendlocal function ownerlist(msg)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)    local data = load_data(_config.moderation.data)    local i = 1  if not data[tostring(msg.chat_id_)] thenif not lang then    return "_Group is not added_"elsereturn "گروه به لیست گروه های مدیریتی ربات اضافه نشده است"  endend  -- determine if table is empty  if next(data[tostring(msg.chat_id_)]['owners']) == nil then --fix way if not lang then    return "_No_ *owner* _in this group_"else    return "در حال حاضر هیچ مالکی برای گروه انتخاب نشده است"  endendif not lang then   message = '*List of moderators :*\n'else   message = '*لیست مدیران گروه :*\n'end  for k,v in pairs(data[tostring(msg.chat_id_)]['owners']) do    message = message ..i.. '- '..v..' [' ..k.. '] \n'   i = i + 1end  return messageendlocal function action_by_reply(arg, data)local hash = "gp_lang:"..data.chat_id_local lang = redis:get(hash)local cmd = arg.cmd    local administration = load_data(_config.moderation.data)if not tonumber(data.sender_user_id_) then return false end    if data.sender_user_id_ then  if not administration[tostring(data.chat_id_)] then  if not lang then    return tdcli.sendMessage(data.chat_id_, "", 0, "_Group is not added_", 0, "md")else    return tdcli.sendMessage(data.chat_id_, "", 0, "_گروه به لیست گروه های مدیریتی ربات اضافه نشده است_", 0, "md")     end  endif cmd == "setowner" thenlocal function owner_cb(arg, data)local hash = "gp_lang:"..arg.chat_idlocal lang = redis:get(hash)    local administration = load_data(_config.moderation.data)if data.username_ thenuser_name = '@'..check_markdown(data.username_)elseuser_name = check_markdown(data.first_name_)endif administration[tostring(arg.chat_id)]['owners'][tostring(data.id_)] then    if not lang then    return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is already a_ *group owner*", 0, "md")   else    return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *از قبل صاحب گروه بود*", 0, "md")      end   endadministration[tostring(arg.chat_id)]['owners'][tostring(data.id_)] = user_name    save_data(_config.moderation.data, administration)   if not lang then  return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is now the_ *group owner*", 0, "md")   else  return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *به مقام صاحب گروه منتصب شد*", 0, "md")   endendtdcli_function ({    ID = "GetUser",    user_id_ = data.sender_user_id_  }, owner_cb, {chat_id=data.chat_id_,user_id=data.sender_user_id_})  end    if cmd == "promote" thenlocal function promote_cb(arg, data)local hash = "gp_lang:"..arg.chat_idlocal lang = redis:get(hash)    local administration = load_data(_config.moderation.data)if data.username_ thenuser_name = '@'..check_markdown(data.username_)elseuser_name = check_markdown(data.first_name_)endif administration[tostring(arg.chat_id)]['mods'][tostring(data.id_)] then   if not lang then    return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is already a_ *moderator*", 0, "md")else    return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *از قبل مدیر گروه بود*", 0, "md")      end   endadministration[tostring(arg.chat_id)]['mods'][tostring(data.id_)] = user_name    save_data(_config.moderation.data, administration)   if not lang then    return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _has been_ *promoted*", 0, "md")   else    return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *به مقام مدیر گروه منتصب شد*", 0, "md")   endendtdcli_function ({    ID = "GetUser",    user_id_ = data.sender_user_id_  }, promote_cb, {chat_id=data.chat_id_,user_id=data.sender_user_id_})  end     if cmd == "remowner" thenlocal function rem_owner_cb(arg, data)local hash = "gp_lang:"..arg.chat_idlocal lang = redis:get(hash)    local administration = load_data(_config.moderation.data)if data.username_ thenuser_name = '@'..check_markdown(data.username_)elseuser_name = check_markdown(data.first_name_)endif not administration[tostring(arg.chat_id)]['owners'][tostring(data.id_)] then   if not lang thenreturn tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is not a_ *group owner*", 0, "md")   elsereturn tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* *از قبل صاحب گروه نبود*", 0, "md")      end   endadministration[tostring(arg.chat_id)]['owners'][tostring(data.id_)] = nil    save_data(_config.moderation.data, administration)   if not lang thenreturn tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is no longer a_ *group owner*", 0, "md")    elsereturn tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *از مقام صاحب گروه برکنار شد*", 0, "md")   endendtdcli_function ({    ID = "GetUser",    user_id_ = data.sender_user_id_  }, rem_owner_cb, {chat_id=data.chat_id_,user_id=data.sender_user_id_})  end    if cmd == "demote" thenlocal function demote_cb(arg, data)    local administration = load_data(_config.moderation.data)if data.username_ thenuser_name = '@'..check_markdown(data.username_)elseuser_name = check_markdown(data.first_name_)endif not administration[tostring(arg.chat_id)]['mods'][tostring(data.id_)] then    if not lang then    return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is not a_ *moderator*", 0, "md")    else    return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *از قبل مدیر گروه نبود*", 0, "md")   end  endadministration[tostring(arg.chat_id)]['mods'][tostring(data.id_)] = nil    save_data(_config.moderation.data, administration)   if not lang then    return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _has been_ *demoted*", 0, "md")   else    return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *از مقام مدیر گروه برکنار شد*", 0, "md")   endendtdcli_function ({    ID = "GetUser",    user_id_ = data.sender_user_id_  }, demote_cb, {chat_id=data.chat_id_,user_id=data.sender_user_id_})  end    if cmd == "id" thenlocal function id_cb(arg, data)    return tdcli.sendMessage(arg.chat_id, "", 0, "*"..data.id_.."*", 0, "md")endtdcli_function ({    ID = "GetUser",    user_id_ = data.sender_user_id_  }, id_cb, {chat_id=data.chat_id_,user_id=data.sender_user_id_})  endelse    if lang then  return tdcli.sendMessage(data.chat_id_, "", 0, "_کاربر یافت نشد_", 0, "md")   else  return tdcli.sendMessage(data.chat_id_, "", 0, "*User Not Found*", 0, "md")      end   endendlocal function action_by_username(arg, data)local hash = "gp_lang:"..arg.chat_idlocal lang = redis:get(hash)local cmd = arg.cmd    local administration = load_data(_config.moderation.data)  if not administration[tostring(arg.chat_id)] then  if not lang then    return tdcli.sendMessage(data.chat_id_, "", 0, "_Group is not added_", 0, "md")else    return tdcli.sendMessage(data.chat_id_, "", 0, "_گروه به لیست گروه های مدیریتی ربات اضافه نشده است_", 0, "md")     end  endif not arg.username then return false end   if data.id_ thenif data.type_.user_.username_ thenuser_name = '@'..check_markdown(data.type_.user_.username_)elseuser_name = check_markdown(data.title_)endif cmd == "setowner" thenif administration[tostring(arg.chat_id)]['owners'][tostring(data.id_)] then    if not lang then    return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is already a_ *group owner*", 0, "md")   else    return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *از قبل صاحب گروه بود*", 0, "md")      end   endadministration[tostring(arg.chat_id)]['owners'][tostring(data.id_)] = user_name    save_data(_config.moderation.data, administration)   if not lang then  return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is now the_ *group owner*", 0, "md")   else  return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *به مقام صاحب گروه منتصب شد*", 0, "md")   endend  if cmd == "promote" thenif administration[tostring(arg.chat_id)]['mods'][tostring(data.id_)] then   if not lang then    return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is already a_ *moderator*", 0, "md")else    return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *از قبل مدیر گروه بود*", 0, "md")      end   endadministration[tostring(arg.chat_id)]['mods'][tostring(data.id_)] = user_name    save_data(_config.moderation.data, administration)   if not lang then    return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _has been_ *promoted*", 0, "md")   else    return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *به مقام مدیر گروه منتصب شد*", 0, "md")   endend   if cmd == "remowner" thenif not administration[tostring(arg.chat_id)]['owners'][tostring(data.id_)] then   if not lang thenreturn tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is not a_ *group owner*", 0, "md")   elsereturn tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* *از قبل صاحب گروه نبود*", 0, "md")      end   endadministration[tostring(arg.chat_id)]['owners'][tostring(data.id_)] = nil    save_data(_config.moderation.data, administration)   if not lang thenreturn tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is no longer a_ *group owner*", 0, "md")    elsereturn tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *از مقام صاحب گروه برکنار شد*", 0, "md")   endend   if cmd == "demote" thenif not administration[tostring(arg.chat_id)]['mods'][tostring(data.id_)] then    if not lang then    return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is not a_ *moderator*", 0, "md")    else    return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *از قبل مدیر گروه نبود*", 0, "md")   end  endadministration[tostring(arg.chat_id)]['mods'][tostring(data.id_)] = nil    save_data(_config.moderation.data, administration)   if not lang then    return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _has been_ *demoted*", 0, "md")   else    return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *از مقام مدیر گروه برکنار شد*", 0, "md")   endend   if cmd == "id" then    return tdcli.sendMessage(arg.chat_id, "", 0, "*"..data.id_.."*", 0, "md")end    if cmd == "res" then    if not lang then     text = "Result for [ ".. check_markdown(data.type_.user_.username_) .." ] :\n"    .. "".. check_markdown(data.title_) .."\n"    .. " [".. data.id_ .."]"  else     text = "اطلاعات برای [ ".. check_markdown(data.type_.user_.username_) .." ] :\n"    .. "".. check_markdown(data.title_) .."\n"    .. " [".. data.id_ .."]"       return tdcli.sendMessage(arg.chat_id, 0, 1, text, 1, 'md')      end   endelse    if lang then  return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر یافت نشد_", 0, "md")   else  return tdcli.sendMessage(arg.chat_id, "", 0, "*User Not Found*", 0, "md")      end   endendlocal function action_by_id(arg, data)local hash = "gp_lang:"..arg.chat_idlocal lang = redis:get(hash)local cmd = arg.cmd    local administration = load_data(_config.moderation.data)  if not administration[tostring(arg.chat_id)] then  if not lang then    return tdcli.sendMessage(data.chat_id_, "", 0, "_Group is not added_", 0, "md")else    return tdcli.sendMessage(data.chat_id_, "", 0, "_گروه به لیست گروه های مدیریتی ربات اضافه نشده است_", 0, "md")     end  endif not tonumber(arg.user_id) then return false end   if data.id_ thenif data.first_name_ thenif data.username_ thenuser_name = '@'..check_markdown(data.username_)elseuser_name = check_markdown(data.first_name_)end  if cmd == "setowner" then  if administration[tostring(arg.chat_id)]['owners'][tostring(data.id_)] then    if not lang then    return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is already a_ *group owner*", 0, "md")   else    return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *از قبل صاحب گروه بود*", 0, "md")      end   endadministration[tostring(arg.chat_id)]['owners'][tostring(data.id_)] = user_name    save_data(_config.moderation.data, administration)   if not lang then  return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is now the_ *group owner*", 0, "md")   else  return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *به مقام صاحب گروه منتصب شد*", 0, "md")   endend  if cmd == "promote" thenif administration[tostring(arg.chat_id)]['mods'][tostring(data.id_)] then   if not lang then    return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is already a_ *moderator*", 0, "md")else    return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *از قبل مدیر گروه بود*", 0, "md")      end   endadministration[tostring(arg.chat_id)]['mods'][tostring(data.id_)] = user_name    save_data(_config.moderation.data, administration)   if not lang then    return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _has been_ *promoted*", 0, "md")   else    return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *به مقام مدیر گروه منتصب شد*", 0, "md")   endend   if cmd == "remowner" thenif not administration[tostring(arg.chat_id)]['owners'][tostring(data.id_)] then   if not lang thenreturn tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is not a_ *group owner*", 0, "md")   elsereturn tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* *از قبل صاحب گروه نبود*", 0, "md")      end   endadministration[tostring(arg.chat_id)]['owners'][tostring(data.id_)] = nil    save_data(_config.moderation.data, administration)   if not lang thenreturn tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is no longer a_ *group owner*", 0, "md")    elsereturn tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *از مقام صاحب گروه برکنار شد*", 0, "md")   endend   if cmd == "demote" thenif not administration[tostring(arg.chat_id)]['mods'][tostring(data.id_)] then    if not lang then    return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _is not a_ *moderator*", 0, "md")    else    return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *از قبل مدیر گروه نبود*", 0, "md")   end  endadministration[tostring(arg.chat_id)]['mods'][tostring(data.id_)] = nil    save_data(_config.moderation.data, administration)   if not lang then    return tdcli.sendMessage(arg.chat_id, "", 0, "_User_ "..user_name.." *"..data.id_.."* _has been_ *demoted*", 0, "md")   else    return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر_ "..user_name.." *"..data.id_.."* *از مقام مدیر گروه برکنار شد*", 0, "md")   endend    if cmd == "whois" thenif data.username_ thenusername = '@'..check_markdown(data.username_)elseif not lang thenusername = 'not found' elseusername = 'ندارد'  endend     if not lang then       return tdcli.sendMessage(arg.chat_id, 0, 1, 'Info for [ '..data.id_..' ] :\nUserName : '..username..'\nName : '..data.first_name_, 1)   else       return tdcli.sendMessage(arg.chat_id, 0, 1, 'اطلاعات برای [ '..data.id_..' ] :\nیوزرنیم : '..username..'\nنام : '..data.first_name_, 1)      end   end else    if not lang then  return tdcli.sendMessage(arg.chat_id, "", 0, "_User not founded_", 0, "md")   else  return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر یافت نشد_", 0, "md")    end  endelse    if lang then  return tdcli.sendMessage(arg.chat_id, "", 0, "_کاربر یافت نشد_", 0, "md")   else  return tdcli.sendMessage(arg.chat_id, "", 0, "*User Not Found*", 0, "md")      end   endend---------------Lock Link-------------------local function lock_link(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal lock_link = data[tostring(target)]["settings"]["lock_link"] if lock_link == "yes" thenif not lang then return "*Link* _Posting Is Already Locked_"elseif lang then return "ارسال لینک در گروه هم اکنون ممنوع است"endelsedata[tostring(target)]["settings"]["lock_link"] = "yes"save_data(_config.moderation.data, data) if not lang then return "*Link* _Posting Has Been Locked_"else return "ارسال لینک در گروه ممنوع شد"endendendlocal function unlock_link(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"endend local lock_link = data[tostring(target)]["settings"]["lock_link"] if lock_link == "no" thenif not lang thenreturn "*Link* _Posting Is Not Locked_" elseif lang thenreturn "ارسال لینک در گروه ممنوع نمیباشد"endelse data[tostring(target)]["settings"]["lock_link"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Link* _Posting Has Been Unlocked_" elsereturn "ارسال لینک در گروه آزاد شد"endendend---------------Lock Tag-------------------local function lock_tag(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal lock_tag = data[tostring(target)]["settings"]["lock_tag"] if lock_tag == "yes" thenif not lang then return "*Tag* _Posting Is Already Locked_"elseif lang then return "ارسال تگ در گروه هم اکنون ممنوع است"endelse data[tostring(target)]["settings"]["lock_tag"] = "yes"save_data(_config.moderation.data, data) if not lang then return "*Tag* _Posting Has Been Locked_"else return "ارسال تگ در گروه ممنوع شد"endendendlocal function unlock_tag(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"end endlocal lock_tag = data[tostring(target)]["settings"]["lock_tag"] if lock_tag == "no" thenif not lang thenreturn "*Tag* _Posting Is Not Locked_" elseif lang thenreturn "ارسال تگ در گروه ممنوع نمیباشد"endelse data[tostring(target)]["settings"]["lock_tag"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Tag* _Posting Has Been Unlocked_" elsereturn "ارسال تگ در گروه آزاد شد"endendend---------------Lock Mention-------------------local function lock_mention(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal lock_mention = data[tostring(target)]["settings"]["lock_mention"] if lock_mention == "yes" thenif not lang then return "*Mention* _Posting Is Already Locked_"elseif lang then return "ارسال فراخوانی افراد هم اکنون ممنوع است"endelse data[tostring(target)]["settings"]["lock_mention"] = "yes"save_data(_config.moderation.data, data)if not lang then  return "*Mention* _Posting Has Been Locked_"else  return "ارسال فراخوانی افراد در گروه ممنوع شد"endendendlocal function unlock_mention(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"endend local lock_mention = data[tostring(target)]["settings"]["lock_mention"] if lock_mention == "no" thenif not lang thenreturn "*Mention* _Posting Is Not Locked_" elseif lang thenreturn "ارسال فراخوانی افراد در گروه ممنوع نمیباشد"endelse data[tostring(target)]["settings"]["lock_mention"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Mention* _Posting Has Been Unlocked_" elsereturn "ارسال فراخوانی افراد در گروه آزاد شد"endendend---------------Lock Arabic--------------local function lock_arabic(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal lock_arabic = data[tostring(target)]["settings"]["lock_arabic"] if lock_arabic == "yes" thenif not lang then return "*Arabic/Persian* _Posting Is Already Locked_"elseif lang then return "ارسال کلمات عربی/فارسی در گروه هم اکنون ممنوع است"endelsedata[tostring(target)]["settings"]["lock_arabic"] = "yes"save_data(_config.moderation.data, data) if not lang then return "*Arabic/Persian* _Posting Has Been Locked_"else return "ارسال کلمات عربی/فارسی در گروه ممنوع شد"endendendlocal function unlock_arabic(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"endend local lock_arabic = data[tostring(target)]["settings"]["lock_arabic"] if lock_arabic == "no" thenif not lang thenreturn "*Arabic/Persian* _Posting Is Not Locked_" elseif lang thenreturn "ارسال کلمات عربی/فارسی در گروه ممنوع نمیباشد"endelse data[tostring(target)]["settings"]["lock_arabic"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Arabic/Persian* _Posting Has Been Unlocked_" elsereturn "ارسال کلمات عربی/فارسی در گروه آزاد شد"endendend---------------Lock Edit-------------------local function lock_edit(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal lock_edit = data[tostring(target)]["settings"]["lock_edit"] if lock_edit == "yes" thenif not lang then return "*Editing* _Is Already Locked_"elseif lang then return "ویرایش پیام هم اکنون ممنوع است"endelse data[tostring(target)]["settings"]["lock_edit"] = "yes"save_data(_config.moderation.data, data) if not lang then return "*Editing* _Has Been Locked_"else return "ویرایش پیام در گروه ممنوع شد"endendendlocal function unlock_edit(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"endend local lock_edit = data[tostring(target)]["settings"]["lock_edit"] if lock_edit == "no" thenif not lang thenreturn "*Editing* _Is Not Locked_" elseif lang thenreturn "ویرایش پیام در گروه ممنوع نمیباشد"endelse data[tostring(target)]["settings"]["lock_edit"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Editing* _Has Been Unlocked_" elsereturn "ویرایش پیام در گروه آزاد شد"endendend---------------Lock spam-------------------local function lock_spam(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal lock_spam = data[tostring(target)]["settings"]["lock_spam"] if lock_spam == "yes" thenif not lang then return "*Spam* _Is Already Locked_"elseif lang then return "ارسال هرزنامه در گروه هم اکنون ممنوع است"endelse data[tostring(target)]["settings"]["lock_spam"] = "yes"save_data(_config.moderation.data, data) if not lang then return "*Spam* _Has Been Locked_"else return "ارسال هرزنامه در گروه ممنوع شد"endendendlocal function unlock_spam(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"endend local lock_spam = data[tostring(target)]["settings"]["lock_spam"] if lock_spam == "no" thenif not lang thenreturn "*Spam* _Posting Is Not Locked_" elseif lang then return "ارسال هرزنامه در گروه ممنوع نمیباشد"endelse data[tostring(target)]["settings"]["lock_spam"] = "no" save_data(_config.moderation.data, data)if not lang then return "*Spam* _Posting Has Been Unlocked_" else return "ارسال هرزنامه در گروه آزاد شد"endendend---------------Lock Flood-------------------local function lock_flood(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal lock_flood = data[tostring(target)]["settings"]["flood"] if lock_flood == "yes" thenif not lang then return "*Flooding* _Is Already Locked_"elseif lang then return "ارسال پیام مکرر در گروه هم اکنون ممنوع است"endelse data[tostring(target)]["settings"]["flood"] = "yes"save_data(_config.moderation.data, data) if not lang then return "*Flooding* _Has Been Locked_"else return "ارسال پیام مکرر در گروه ممنوع شد"endendendlocal function unlock_flood(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"endend local lock_flood = data[tostring(target)]["settings"]["flood"] if lock_flood == "no" thenif not lang thenreturn "*Flooding* _Is Not Locked_" elseif lang thenreturn "ارسال پیام مکرر در گروه ممنوع نمیباشد"endelse data[tostring(target)]["settings"]["flood"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Flooding* _Has Been Unlocked_" elsereturn "ارسال پیام مکرر در گروه آزاد شد"endendend---------------Lock Bots-------------------local function lock_bots(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal lock_bots = data[tostring(target)]["settings"]["lock_bots"] if lock_bots == "yes" thenif not lang then return "*Bots* _Protection Is Already Enabled_"elseif lang then return "محافظت از گروه در برابر ربات ها هم اکنون فعال است"endelse data[tostring(target)]["settings"]["lock_bots"] = "yes"save_data(_config.moderation.data, data) if not lang then return "*Bots* _Protection Has Been Enabled_"else return "محافظت از گروه در برابر ربات ها فعال شد"endendendlocal function unlock_bots(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"end endlocal lock_bots = data[tostring(target)]["settings"]["lock_bots"] if lock_bots == "no" thenif not lang thenreturn "*Bots* _Protection Is Not Enabled_" elseif lang thenreturn "محافظت از گروه در برابر ربات ها غیر فعال است"endelse data[tostring(target)]["settings"]["lock_bots"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Bots* _Protection Has Been Disabled_" elsereturn "محافظت از گروه در برابر ربات ها غیر فعال شد"endendend---------------Lock Markdown-------------------local function lock_markdown(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal lock_markdown = data[tostring(target)]["settings"]["lock_markdown"] if lock_markdown == "yes" thenif not lang then  return "*Markdown* _Posting Is Already Locked_"elseif lang then return "ارسال پیام های دارای فونت در گروه هم اکنون ممنوع است"endelse data[tostring(target)]["settings"]["lock_markdown"] = "yes"save_data(_config.moderation.data, data) if not lang then return "*Markdown* _Posting Has Been Locked_"else return "ارسال پیام های دارای فونت در گروه ممنوع شد"endendendlocal function unlock_markdown(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"end endlocal lock_markdown = data[tostring(target)]["settings"]["lock_markdown"] if lock_markdown == "no" thenif not lang thenreturn "*Markdown* _Posting Is Not Locked_"elseif lang thenreturn "ارسال پیام های دارای فونت در گروه ممنوع نمیباشد"endelse data[tostring(target)]["settings"]["lock_markdown"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Markdown* _Posting Has Been Unlocked_"elsereturn "ارسال پیام های دارای فونت در گروه آزاد شد"endendend---------------Lock Webpage-------------------local function lock_webpage(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal lock_webpage = data[tostring(target)]["settings"]["lock_webpage"] if lock_webpage == "yes" thenif not lang then return "*Webpage* _Is Already Locked_"elseif lang then return "ارسال صفحات وب در گروه هم اکنون ممنوع است"endelse data[tostring(target)]["settings"]["lock_webpage"] = "yes"save_data(_config.moderation.data, data) if not lang then return "*Webpage* _Has Been Locked_"else return "ارسال صفحات وب در گروه ممنوع شد"endendendlocal function unlock_webpage(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"end endlocal lock_webpage = data[tostring(target)]["settings"]["lock_webpage"] if lock_webpage == "no" thenif not lang thenreturn "*Webpage* _Is Not Locked_" elseif lang thenreturn "ارسال صفحات وب در گروه ممنوع نمیباشد"endelse data[tostring(target)]["settings"]["lock_webpage"] = "no"save_data(_config.moderation.data, data) if not lang thenreturn "*Webpage* _Has Been Unlocked_" elsereturn "ارسال صفحات وب در گروه آزاد شد"endendend--------Mutes-----------------Mute all--------------------------local function mute_all(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) then if not lang thenreturn "_You're Not_ *Moderator*" elsereturn "شما مدیر گروه نمیباشید"endendlocal mute_all = data[tostring(target)]["settings"]["mute_all"] if mute_all == "yes" then if not lang thenreturn "*Mute All* _Is Already Enabled_" elseif lang thenreturn "بیصدا کردن همه فعال است"endelse data[tostring(target)]["settings"]["mute_all"] = "yes" save_data(_config.moderation.data, data) if not lang thenreturn "*Mute All* _Has Been Enabled_" elsereturn "بیصدا کردن همه فعال شد"endendendlocal function unmute_all(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) then if not lang thenreturn "_You're Not_ *Moderator*" elsereturn "شما مدیر گروه نمیباشید"endendlocal mute_all = data[tostring(target)]["settings"]["mute_all"] if mute_all == "no" then if not lang thenreturn "*Mute All* _Is Already Disabled_" elseif lang thenreturn "بیصدا کردن همه غیر فعال است"endelse data[tostring(target)]["settings"]["mute_all"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Mute All* _Has Been Disabled_" elsereturn "بیصدا کردن همه غیر فعال شد"end endend---------------Mute Gif-------------------local function mute_gif(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal mute_gif = data[tostring(target)]["settings"]["mute_gif"] if mute_gif == "yes" thenif not lang then return "*Mute Gif* _Is Already Enabled_"elseif lang then return "بیصدا کردن تصاویر متحرک فعال است"endelse data[tostring(target)]["settings"]["mute_gif"] = "yes" save_data(_config.moderation.data, data) if not lang then  return "*Mute Gif* _Has Been Enabled_"else return "بیصدا کردن تصاویر متحرک فعال شد"endendendlocal function unmute_gif(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"endend local mute_gif = data[tostring(target)]["settings"]["mute_gif"] if mute_gif == "no" thenif not lang thenreturn "*Mute Gif* _Is Already Disabled_" elseif lang thenreturn "بیصدا کردن تصاویر متحرک غیر فعال بود"endelse data[tostring(target)]["settings"]["mute_gif"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Mute Gif* _Has Been Disabled_" elsereturn "بیصدا کردن تصاویر متحرک غیر فعال شد"endendend---------------Mute Game-------------------local function mute_game(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal mute_game = data[tostring(target)]["settings"]["mute_game"] if mute_game == "yes" thenif not lang then return "*Mute Game* _Is Already Enabled_"elseif lang then return "بیصدا کردن بازی های تحت وب فعال است"endelse data[tostring(target)]["settings"]["mute_game"] = "yes" save_data(_config.moderation.data, data) if not lang then return "*Mute Game* _Has Been Enabled_"else return "بیصدا کردن بازی های تحت وب فعال شد"endendendlocal function unmute_game(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"end endlocal mute_game = data[tostring(target)]["settings"]["mute_game"] if mute_game == "no" thenif not lang thenreturn "*Mute Game* _Is Already Disabled_" elseif lang thenreturn "بیصدا کردن بازی های تحت وب غیر فعال است"endelse data[tostring(target)]["settings"]["mute_game"] = "no" save_data(_config.moderation.data, data)if not lang then return "*Mute Game* _Has Been Disabled_" elsereturn "بیصدا کردن بازی های تحت وب غیر فعال شد"endendend---------------Mute Inline-------------------local function mute_inline(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal mute_inline = data[tostring(target)]["settings"]["mute_inline"] if mute_inline == "yes" thenif not lang then return "*Mute Inline* _Is Already Enabled_"elseif lang then return "بیصدا کردن کیبورد شیشه ای فعال است"endelse data[tostring(target)]["settings"]["mute_inline"] = "yes" save_data(_config.moderation.data, data) if not lang then return "*Mute Inline* _Has Been Enabled_"else return "بیصدا کردن کیبورد شیشه ای فعال شد"endendendlocal function unmute_inline(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"endend local mute_inline = data[tostring(target)]["settings"]["mute_inline"] if mute_inline == "no" thenif not lang thenreturn "*Mute Inline* _Is Already Disabled_" elseif lang thenreturn "بیصدا کردن کیبورد شیشه ای غیر فعال است"endelse data[tostring(target)]["settings"]["mute_inline"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Mute Inline* _Has Been Disabled_" elsereturn "بیصدا کردن کیبورد شیشه ای غیر فعال شد"endendend---------------Mute Text-------------------local function mute_text(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal mute_text = data[tostring(target)]["settings"]["mute_text"] if mute_text == "yes" thenif not lang then return "*Mute Text* _Is Already Enabled_"elseif lang then return "بیصدا کردن متن فعال است"endelse data[tostring(target)]["settings"]["mute_text"] = "yes" save_data(_config.moderation.data, data) if not lang then return "*Mute Text* _Has Been Enabled_"else return "بیصدا کردن متن فعال شد"endendendlocal function unmute_text(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"end endlocal mute_text = data[tostring(target)]["settings"]["mute_text"] if mute_text == "no" thenif not lang thenreturn "*Mute Text* _Is Already Disabled_"elseif lang thenreturn "بیصدا کردن متن غیر فعال است" endelse data[tostring(target)]["settings"]["mute_text"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Mute Text* _Has Been Disabled_" elsereturn "بیصدا کردن متن غیر فعال شد"endendend---------------Mute photo-------------------local function mute_photo(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal mute_photo = data[tostring(target)]["settings"]["mute_photo"] if mute_photo == "yes" thenif not lang then return "*Mute Photo* _Is Already Enabled_"elseif lang then return "بیصدا کردن عکس فعال است"endelse data[tostring(target)]["settings"]["mute_photo"] = "yes" save_data(_config.moderation.data, data) if not lang then return "*Mute Photo* _Has Been Enabled_"else return "بیصدا کردن عکس فعال شد"endendendlocal function unmute_photo(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"endend local mute_photo = data[tostring(target)]["settings"]["mute_photo"] if mute_photo == "no" thenif not lang thenreturn "*Mute Photo* _Is Already Disabled_" elseif lang thenreturn "بیصدا کردن عکس غیر فعال است"endelse data[tostring(target)]["settings"]["mute_photo"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Mute Photo* _Has Been Disabled_" elsereturn "بیصدا کردن عکس غیر فعال شد"endendend---------------Mute Video-------------------local function mute_video(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal mute_video = data[tostring(target)]["settings"]["mute_video"] if mute_video == "yes" thenif not lang then return "*Mute Video* _Is Already Enabled_"elseif lang then return "بیصدا کردن فیلم فعال است"endelse data[tostring(target)]["settings"]["mute_video"] = "yes" save_data(_config.moderation.data, data)if not lang then  return "*Mute Video* _Has Been Enabled_"else return "بیصدا کردن فیلم فعال شد"endendendlocal function unmute_video(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"endend local mute_video = data[tostring(target)]["settings"]["mute_video"] if mute_video == "no" thenif not lang thenreturn "*Mute Video* _Is Already Disabled_" elseif lang thenreturn "بیصدا کردن فیلم غیر فعال است"endelse data[tostring(target)]["settings"]["mute_video"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Mute Video* _Has Been Disabled_" elsereturn "بیصدا کردن فیلم غیر فعال شد"endendend---------------Mute Audio-------------------local function mute_audio(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal mute_audio = data[tostring(target)]["settings"]["mute_audio"] if mute_audio == "yes" thenif not lang then return "*Mute Audio* _Is Already Enabled_"elseif lang then return "بیصدا کردن آهنگ فعال است"endelse data[tostring(target)]["settings"]["mute_audio"] = "yes" save_data(_config.moderation.data, data) if not lang then return "*Mute Audio* _Has Been Enabled_"else return "بیصدا کردن آهنگ فعال شد"endendendlocal function unmute_audio(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"endend local mute_audio = data[tostring(target)]["settings"]["mute_audio"] if mute_audio == "no" thenif not lang thenreturn "*Mute Audio* _Is Already Disabled_" elseif lang thenreturn "بیصدا کردن آهنک غیر فعال است"endelse data[tostring(target)]["settings"]["mute_audio"] = "no" save_data(_config.moderation.data, data)if not lang then return "*Mute Audio* _Has Been Disabled_"elsereturn "بیصدا کردن آهنگ غیر فعال شد" endendend---------------Mute Voice-------------------local function mute_voice(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal mute_voice = data[tostring(target)]["settings"]["mute_voice"] if mute_voice == "yes" thenif not lang then return "*Mute Voice* _Is Already Enabled_"elseif lang then return "بیصدا کردن صدا فعال است"endelse data[tostring(target)]["settings"]["mute_voice"] = "yes" save_data(_config.moderation.data, data) if not lang then return "*Mute Voice* _Has Been Enabled_"else return "بیصدا کردن صدا فعال شد"endendendlocal function unmute_voice(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"endend local mute_voice = data[tostring(target)]["settings"]["mute_voice"] if mute_voice == "no" thenif not lang thenreturn "*Mute Voice* _Is Already Disabled_" elseif lang thenreturn "بیصدا کردن صدا غیر فعال است"endelse data[tostring(target)]["settings"]["mute_voice"] = "no" save_data(_config.moderation.data, data)if not lang then return "*Mute Voice* _Has Been Disabled_" elsereturn "بیصدا کردن صدا غیر فعال شد"endendend---------------Mute Sticker-------------------local function mute_sticker(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal mute_sticker = data[tostring(target)]["settings"]["mute_sticker"] if mute_sticker == "yes" thenif not lang then return "*Mute Sticker* _Is Already Enabled_"elseif lang then return "بیصدا کردن برچسب فعال است"endelse data[tostring(target)]["settings"]["mute_sticker"] = "yes" save_data(_config.moderation.data, data) if not lang then return "*Mute Sticker* _Has Been Enabled_"else return "بیصدا کردن برچسب فعال شد"endendendlocal function unmute_sticker(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"end endlocal mute_sticker = data[tostring(target)]["settings"]["mute_sticker"] if mute_sticker == "no" thenif not lang thenreturn "*Mute Sticker* _Is Already Disabled_" elseif lang thenreturn "بیصدا کردن برچسب غیر فعال است"endelse data[tostring(target)]["settings"]["mute_sticker"] = "no" save_data(_config.moderation.data, data)if not lang then return "*Mute Sticker* _Has Been Disabled_"elsereturn "بیصدا کردن برچسب غیر فعال شد"end endend---------------Mute Contact-------------------local function mute_contact(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal mute_contact = data[tostring(target)]["settings"]["mute_contact"] if mute_contact == "yes" thenif not lang then return "*Mute Contact* _Is Already Enabled_"elseif lang then return "بیصدا کردن مخاطب فعال است"endelse data[tostring(target)]["settings"]["mute_contact"] = "yes" save_data(_config.moderation.data, data) if not lang then return "*Mute Contact* _Has Been Enabled_"else return "بیصدا کردن مخاطب فعال شد"endendendlocal function unmute_contact(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"endend local mute_contact = data[tostring(target)]["settings"]["mute_contact"] if mute_contact == "no" thenif not lang thenreturn "*Mute Contact* _Is Already Disabled_" elseif lang thenreturn "بیصدا کردن مخاطب غیر فعال است"endelse data[tostring(target)]["settings"]["mute_contact"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Mute Contact* _Has Been Disabled_" elsereturn "بیصدا کردن مخاطب غیر فعال شد"endendend---------------Mute Forward-------------------local function mute_forward(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal mute_forward = data[tostring(target)]["settings"]["mute_forward"] if mute_forward == "yes" thenif not lang then return "*Mute Forward* _Is Already Enabled_"elseif lang then return "بیصدا کردن نقل قول فعال است"endelse data[tostring(target)]["settings"]["mute_forward"] = "yes" save_data(_config.moderation.data, data) if not lang then return "*Mute Forward* _Has Been Enabled_"else return "بیصدا کردن نقل قول فعال شد"endendendlocal function unmute_forward(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"endend local mute_forward = data[tostring(target)]["settings"]["mute_forward"] if mute_forward == "no" thenif not lang thenreturn "*Mute Forward* _Is Already Disabled_"elseif lang thenreturn "بیصدا کردن نقل قول غیر فعال است"end else data[tostring(target)]["settings"]["mute_forward"] = "no" save_data(_config.moderation.data, data)if not lang then return "*Mute Forward* _Has Been Disabled_" elsereturn "بیصدا کردن نقل قول غیر فعال شد"endendend---------------Mute Location-------------------local function mute_location(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal mute_location = data[tostring(target)]["settings"]["mute_location"] if mute_location == "yes" thenif not lang then return "*Mute Location* _Is Already Enabled_"elseif lang then return "بیصدا کردن موقعیت فعال است"endelse data[tostring(target)]["settings"]["mute_location"] = "yes" save_data(_config.moderation.data, data)if not lang then return "*Mute Location* _Has Been Enabled_"else return "بیصدا کردن موقعیت فعال شد"endendendlocal function unmute_location(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"endend local mute_location = data[tostring(target)]["settings"]["mute_location"] if mute_location == "no" thenif not lang thenreturn "*Mute Location* _Is Already Disabled_" elseif lang thenreturn "بیصدا کردن موقعیت غیر فعال است"endelse data[tostring(target)]["settings"]["mute_location"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Mute Location* _Has Been Disabled_" elsereturn "بیصدا کردن موقعیت غیر فعال شد"endendend---------------Mute Document-------------------local function mute_document(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"endendlocal mute_document = data[tostring(target)]["settings"]["mute_document"] if mute_document == "yes" thenif not lang then return "*Mute Document* _Is Already Enabled_"elseif lang then return "بیصدا کردن اسناد فعال لست"endelse data[tostring(target)]["settings"]["mute_document"] = "yes" save_data(_config.moderation.data, data) if not lang then return "*Mute Document* _Has Been Enabled_"else return "بیصدا کردن اسناد فعال شد"endendendlocal function unmute_document(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نمیباشید"endend local mute_document = data[tostring(target)]["settings"]["mute_document"] if mute_document == "no" thenif not lang thenreturn "*Mute Document* _Is Already Disabled_" elseif lang thenreturn "بیصدا کردن اسناد غیر فعال است"endelse data[tostring(target)]["settings"]["mute_document"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Mute Document* _Has Been Disabled_" elsereturn "بیصدا کردن اسناد غیر فعال شد"endendend---------------Mute TgService-------------------local function mute_tgservice(msg, data, target) local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then return "_You're Not_ *Moderator*"else return "شما مدیر گروه نمیباشید"endendlocal mute_tgservice = data[tostring(target)]["settings"]["mute_tgservice"] if mute_tgservice == "yes" thenif not lang then return "*Mute TgService* _Is Already Enabled_"elseif lang then return "بیصدا کردن خدمات تلگرام فعال است"endelse data[tostring(target)]["settings"]["mute_tgservice"] = "yes" save_data(_config.moderation.data, data) if not lang then return "*Mute TgService* _Has Been Enabled_"elsereturn "بیصدا کردن خدمات تلگرام فعال شد"endendendlocal function unmute_tgservice(msg, data, target)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) if not is_mod(msg) thenif not lang thenreturn "_You're Not_ *Moderator*"elsereturn "شما مدیر گروه نیستید"end endlocal mute_tgservice = data[tostring(target)]["settings"]["mute_tgservice"] if mute_tgservice == "no" thenif not lang thenreturn "*Mute TgService* _Is Already Disabled_"elseif lang thenreturn "بیصدا کردن خدمات تلگرام غیر فعال است"end else data[tostring(target)]["settings"]["mute_tgservice"] = "no" save_data(_config.moderation.data, data) if not lang thenreturn "*Mute TgService* _Has Been Disabled_"elsereturn "بیصدا کردن خدمات تلگرام غیر فعال شد"end endendfunction group_settings(msg, target)  local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)if not is_mod(msg) thenif not lang then  return "_You're Not_ *Moderator*"else  return "شما مدیر گروه نمیباشید"endendlocal data = load_data(_config.moderation.data)local target = msg.chat_id_ if data[tostring(target)] then  if data[tostring(target)]["settings"]["num_msg_max"] then  NUM_MSG_MAX = tonumber(data[tostring(target)]['settings']['num_msg_max']) print('custom'..NUM_MSG_MAX)  else  NUM_MSG_MAX = 5endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["lock_link"] then   data[tostring(target)]["settings"]["lock_link"] = "yes"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["lock_tag"] then   data[tostring(target)]["settings"]["lock_tag"] = "yes"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["lock_mention"] then   data[tostring(target)]["settings"]["lock_mention"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["lock_arabic"] then   data[tostring(target)]["settings"]["lock_arabic"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["lock_edit"] then   data[tostring(target)]["settings"]["lock_edit"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["lock_spam"] then   data[tostring(target)]["settings"]["lock_spam"] = "yes"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["lock_flood"] then   data[tostring(target)]["settings"]["lock_flood"] = "yes"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["lock_bots"] then   data[tostring(target)]["settings"]["lock_bots"] = "yes"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["lock_markdown"] then   data[tostring(target)]["settings"]["lock_markdown"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["lock_webpage"] then   data[tostring(target)]["settings"]["lock_webpage"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["welcome"] then   data[tostring(target)]["settings"]["welcome"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["mute_all"] then   data[tostring(target)]["settings"]["mute_all"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["mute_gif"] then   data[tostring(target)]["settings"]["mute_gif"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["mute_text"] then   data[tostring(target)]["settings"]["mute_text"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["mute_photo"] then   data[tostring(target)]["settings"]["mute_photo"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["mute_video"] then   data[tostring(target)]["settings"]["mute_video"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["mute_audio"] then   data[tostring(target)]["settings"]["mute_audio"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["mute_voice"] then   data[tostring(target)]["settings"]["mute_voice"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["mute_sticker"] then   data[tostring(target)]["settings"]["mute_sticker"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["mute_contact"] then   data[tostring(target)]["settings"]["mute_contact"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["mute_forward"] then   data[tostring(target)]["settings"]["mute_forward"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["mute_location"] then   data[tostring(target)]["settings"]["mute_location"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["mute_document"] then   data[tostring(target)]["settings"]["mute_document"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["mute_tgservice"] then   data[tostring(target)]["settings"]["mute_tgservice"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["mute_inline"] then   data[tostring(target)]["settings"]["mute_inline"] = "no"  endendif data[tostring(target)]["settings"] then  if not data[tostring(target)]["settings"]["mute_game"] then   data[tostring(target)]["settings"]["mute_game"] = "no"  endendlocal expiretime = redis:hget('expiretime', msg.chat_id_)    local expire = ''  if not expiretime then  expire = expire..'Unlimited'  else   local now = tonumber(os.time())   expire =  expire..math.floor((tonumber(expiretime) - tonumber(now)) / 86400) + 1 end if not lang then    local exp = redis:get("charged:"..msg.chat_id_)    local day = 86400    local ex = redis:ttl("charged:"..msg.chat_id_)       if not exp or ex == -1 then        expireen = "_Expire date_ ➣ *Unlimited*"       else        local d = math.floor(ex / day ) + 1       expireen = ""..d..""   endlocal settings = data[tostring(target)]["settings"]  text = "*⚙Group Settings⚙*\n\n*💢Lock edit :* _"..settings.lock_edit.."_\n*💢Lock links :* _"..settings.lock_link.."_\n*💢Lock tags :* _"..settings.lock_tag.."_\n*💢Lock flood :* _"..settings.flood.."_\n*💢Lock spam :* _"..settings.lock_spam.."_\n*💢Lock mention :* _"..settings.lock_mention.."_\n*💢Lock webpage :* _"..settings.lock_webpage.."_\n*💢Lock markdown :* _"..settings.lock_markdown.."_\n*💢Group welcome :* _"..settings.welcome.."_\n*💢Bots protection :* _"..settings.lock_bots.."_\n*💢Flood sensitivity :* _"..NUM_MSG_MAX.."_\n*____________________*\n*⚙Group Mute List⚙* \n\n*💢Mute all :* _"..settings.mute_all.."_\n*💢Mute gif :* _"..settings.mute_gif.."_\n*💢Mute text :* _"..settings.mute_text.."_\n*💢Mute inline :* _"..settings.mute_inline.."_\n*💢Mute game :* _"..settings.mute_game.."_\n*💢Mute photo :* _"..settings.mute_photo.."_\n*💢Mute video :* _"..settings.mute_video.."_\n*💢Mute audio :* _"..settings.mute_audio.."_\n*💢Mute voice :* _"..settings.mute_voice.."_\n*💢Mute sticker :* _"..settings.mute_sticker.."_\n*💢Mute contact :* _"..settings.mute_contact.."_\n*💢Mute forward :* _"..settings.mute_forward.."_\n*💢Mute location :* _"..settings.mute_location.."_\n*💢Mute document :* _"..settings.mute_document.."_\n*💢Mute TgService :* _"..settings.mute_tgservice.."_\n*____________________*\n*☡Bot sudo☡:*@MahDiRoO\n*🔖Expire Stats🔖*: _"..expireen.." Day_\n*🌐Group Language🌐* : *EN*"else    local exp = redis:get("charged:"..msg.chat_id_)    local day = 86400    local ex = redis:ttl("charged:"..msg.chat_id_)       if not exp or ex == -1 then        expirefa = "_تاریخ انقضا_ ➣ *نامحدود*"       else        local d = math.floor(ex / day ) + 1       expirefa = ""..d..""   endlocal settings = data[tostring(target)]["settings"] text = "*⚙تنظیمات گروه⚙:*\n*💢قفل ویرایش پیام :* _"..settings.lock_edit.."_\n*💢قفل لینک :* _"..settings.lock_link.."_\n*💢قفل تگ :* _"..settings.lock_tag.."_\n*💢قفل پیام مکرر :* _"..settings.flood.."_\n*💢قفل هرزنامه :* _"..settings.lock_spam.."_\n*💢قفل فراخوانی :* _"..settings.lock_mention.."_\n*💢قفل صفحات وب :* _"..settings.lock_webpage.."_\n*💢قفل فونت :* _"..settings.lock_markdown.."_\n*💢پیام خوشآمد گویی :* _"..settings.welcome.."_\n*💢محافظت در برابر ربات ها :* _"..settings.lock_bots.."_\n*💢حداکثر پیام مکرر :* _"..NUM_MSG_MAX.."_\n*____________________*\n*⚙لیست بیصدا ها⚙* : \n*🚀بیصدا همه : * _"..settings.mute_all.."_\n*🚀بیصدا تصاویر متحرک :* _"..settings.mute_gif.."_\n*🚀بیصدا متن :* _"..settings.mute_text.."_\n*🚀بیصدا کیبورد شیشه ای :* _"..settings.mute_inline.."_\n*🚀بیصدا بازی های تحت وب :* _"..settings.mute_game.."_\n*🚀بیصدا عکس :* _"..settings.mute_photo.."_\n*🚀بیصدا فیلم :* _"..settings.mute_video.."_\n*🚀بیصدا آهنگ :* _"..settings.mute_audio.."_\n*🚀بیصدا صدا :* _"..settings.mute_voice.."_\n*🚀بیصدا برچسب :* _"..settings.mute_sticker.."_\n*🚀بیصدا مخاطب :* _"..settings.mute_contact.."_\n*🚀بیصدا نقل قول :* _"..settings.mute_forward.."_\n*🚀بیصدا موقعیت :* _"..settings.mute_location.."_\n*🚀بیصدا اسناد :* _"..settings.mute_document.."_\n*🚀بیصدا خدمات تلگرام :* _"..settings.mute_tgservice.."_\n*____________________*\n*🔖اعتبار گروه🔖*: _"..expirefa.." روز_\n_🌐زبان سوپرگروه🌐_ : *FA*"endreturn textendlocal function run(msg, matches)local hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash)    local data = load_data(_config.moderation.data)   local chat = msg.chat_id_   local user = msg.sender_user_id_if matches[1] == "idd" thenif not matches[2] and tonumber(msg.reply_to_message_id_) == 0 then   if not lang thenreturn "*Chat ID :* _"..chat.."_\n*User ID :* _"..user.."_"   elsereturn "*شناسه گروه :* _"..chat.."_\n*شناسه شما :* _"..user.."_"   endendif not matches[2] and tonumber(msg.reply_to_message_id_) ~= 0 then    tdcli_function ({      ID = "GetMessage",      chat_id_ = msg.chat_id_,      message_id_ = msg.reply_to_message_id_    }, action_by_reply, {chat_id=msg.chat_id_,cmd="id"})  endif matches[2] and tonumber(msg.reply_to_message_id_) == 0 then   tdcli_function ({      ID = "SearchPublicChat",      username_ = matches[2]    }, action_by_username, {chat_id=msg.chat_id_,username=matches[2],cmd="id"})      end   endif matches[1] == "pin" and is_owner(msg) thentdcli.pinChannelMessage(msg.chat_id_, msg.reply_to_message_id_, 1)if not lang thenreturn "*Message Has Been Pinned*"elsereturn "پیام سجاق شد"endendif matches[1] == 'unpin' and is_mod(msg) thentdcli.unpinChannelMessage(msg.chat_id_)if not lang thenreturn "*Pin message has been unpinned*"elsereturn "پیام سنجاق شده پاک شد"endendif matches[1] == "add" thenreturn modadd(msg)endif matches[1] == "rem" thenreturn modrem(msg)endif matches[1] == "setowner" and is_admin(msg) thenif not matches[2] and tonumber(msg.reply_to_message_id_) ~= 0 then    tdcli_function ({      ID = "GetMessage",      chat_id_ = msg.chat_id_,      message_id_ = msg.reply_to_message_id_    }, action_by_reply, {chat_id=msg.chat_id_,cmd="setowner"})  end  if matches[2] and string.match(matches[2], '^%d+$') thentdcli_function ({    ID = "GetUser",    user_id_ = matches[2],  }, action_by_id, {chat_id=msg.chat_id_,user_id=matches[2],cmd="setowner"})    end  if matches[2] and not string.match(matches[2], '^%d+$') then   tdcli_function ({      ID = "SearchPublicChat",      username_ = matches[2]    }, action_by_username, {chat_id=msg.chat_id_,username=matches[2],cmd="setowner"})      end   endif matches[1] == "remowner" and is_admin(msg) thenif not matches[2] and tonumber(msg.reply_to_message_id_) ~= 0 then    tdcli_function ({      ID = "GetMessage",      chat_id_ = msg.chat_id_,      message_id_ = msg.reply_to_message_id_    }, action_by_reply, {chat_id=msg.chat_id_,cmd="remowner"})  end  if matches[2] and string.match(matches[2], '^%d+$') thentdcli_function ({    ID = "GetUser",    user_id_ = matches[2],  }, action_by_id, {chat_id=msg.chat_id_,user_id=matches[2],cmd="remowner"})    end  if matches[2] and not string.match(matches[2], '^%d+$') then   tdcli_function ({      ID = "SearchPublicChat",      username_ = matches[2]    }, action_by_username, {chat_id=msg.chat_id_,username=matches[2],cmd="remowner"})      end   endif matches[1] == "promote" and is_owner(msg) thenif not matches[2] and tonumber(msg.reply_to_message_id_) ~= 0 then    tdcli_function ({      ID = "GetMessage",      chat_id_ = msg.chat_id_,      message_id_ = msg.reply_to_message_id_    }, action_by_reply, {chat_id=msg.chat_id_,cmd="promote"})  end  if matches[2] and string.match(matches[2], '^%d+$') thentdcli_function ({    ID = "GetUser",    user_id_ = matches[2],  }, action_by_id, {chat_id=msg.chat_id_,user_id=matches[2],cmd="promote"})    end  if matches[2] and not string.match(matches[2], '^%d+$') then   tdcli_function ({      ID = "SearchPublicChat",      username_ = matches[2]    }, action_by_username, {chat_id=msg.chat_id_,username=matches[2],cmd="promote"})      end   endif matches[1] == "demote" and is_owner(msg) thenif not matches[2] and tonumber(msg.reply_to_message_id_) ~= 0 then tdcli_function ({      ID = "GetMessage",      chat_id_ = msg.chat_id_,      message_id_ = msg.reply_to_message_id_    }, action_by_reply, {chat_id=msg.chat_id_,cmd="demote"})  end  if matches[2] and string.match(matches[2], '^%d+$') thentdcli_function ({    ID = "GetUser",    user_id_ = matches[2],  }, action_by_id, {chat_id=msg.chat_id_,user_id=matches[2],cmd="demote"})    end  if matches[2] and not string.match(matches[2], '^%d+$') then    tdcli_function ({      ID = "SearchPublicChat",      username_ = matches[2]    }, action_by_username, {chat_id=msg.chat_id_,username=matches[2],cmd="demote"})      end   endif matches[1] == "lock" and is_mod(msg) thenlocal target = msg.chat_id_if matches[2] == "link" thenreturn lock_link(msg, data, target)endif matches[2] == "tag" thenreturn lock_tag(msg, data, target)endif matches[2] == "mention" thenreturn lock_mention(msg, data, target)endif matches[2] == "arabic" thenreturn lock_arabic(msg, data, target)endif matches[2] == "edit" thenreturn lock_edit(msg, data, target)endif matches[2] == "spam" thenreturn lock_spam(msg, data, target)endif matches[2] == "flood" thenreturn lock_flood(msg, data, target)endif matches[2] == "bots" thenreturn lock_bots(msg, data, target)endif matches[2] == "markdown" thenreturn lock_markdown(msg, data, target)endif matches[2] == "webpage" thenreturn lock_webpage(msg, data, target)endendif matches[1] == "unlock" and is_mod(msg) thenlocal target = msg.chat_id_if matches[2] == "link" thenreturn unlock_link(msg, data, target)endif matches[2] == "tag" thenreturn unlock_tag(msg, data, target)endif matches[2] == "mention" thenreturn unlock_mention(msg, data, target)endif matches[2] == "arabic" thenreturn unlock_arabic(msg, data, target)endif matches[2] == "edit" thenreturn unlock_edit(msg, data, target)endif matches[2] == "spam" thenreturn unlock_spam(msg, data, target)endif matches[2] == "flood" thenreturn unlock_flood(msg, data, target)endif matches[2] == "bots" thenreturn unlock_bots(msg, data, target)endif matches[2] == "markdown" thenreturn unlock_markdown(msg, data, target)endif matches[2] == "webpage" thenreturn unlock_webpage(msg, data, target)endendif matches[1] == "mute" and is_mod(msg) thenlocal target = msg.chat_id_if matches[2] == "all" thenreturn mute_all(msg, data, target)endif matches[2] == "gif" thenreturn mute_gif(msg, data, target)endif matches[2] == "text" thenreturn mute_text(msg ,data, target)endif matches[2] == "photo" thenreturn mute_photo(msg ,data, target)endif matches[2] == "video" thenreturn mute_video(msg ,data, target)endif matches[2] == "audio" thenreturn mute_audio(msg ,data, target)endif matches[2] == "voice" thenreturn mute_voice(msg ,data, target)endif matches[2] == "sticker" thenreturn mute_sticker(msg ,data, target)endif matches[2] == "contact" thenreturn mute_contact(msg ,data, target)endif matches[2] == "forward" thenreturn mute_forward(msg ,data, target)endif matches[2] == "location" thenreturn mute_location(msg ,data, target)endif matches[2] == "document" thenreturn mute_document(msg ,data, target)endif matches[2] == "tgservice" thenreturn mute_tgservice(msg ,data, target)endif matches[2] == "inline" thenreturn mute_inline(msg ,data, target)endif matches[2] == "game" thenreturn mute_game(msg ,data, target)endendif matches[1] == "unmute" and is_mod(msg) thenlocal target = msg.chat_id_if matches[2] == "all" thenreturn unmute_all(msg, data, target)endif matches[2] == "gif" thenreturn unmute_gif(msg, data, target)endif matches[2] == "text" thenreturn unmute_text(msg, data, target)endif matches[2] == "photo" thenreturn unmute_photo(msg ,data, target)endif matches[2] == "video" thenreturn unmute_video(msg ,data, target)endif matches[2] == "audio" thenreturn unmute_audio(msg ,data, target)endif matches[2] == "voice" thenreturn unmute_voice(msg ,data, target)endif matches[2] == "sticker" thenreturn unmute_sticker(msg ,data, target)endif matches[2] == "contact" thenreturn unmute_contact(msg ,data, target)endif matches[2] == "forward" thenreturn unmute_forward(msg ,data, target)endif matches[2] == "location" thenreturn unmute_location(msg ,data, target)endif matches[2] == "document" thenreturn unmute_document(msg ,data, target)endif matches[2] == "tgservice" thenreturn unmute_tgservice(msg ,data, target)endif matches[2] == "inline" thenreturn unmute_inline(msg ,data, target)endif matches[2] == "game" thenreturn unmute_game(msg ,data, target)endendif matches[1] == "gpinfo" and is_mod(msg) and gp_type(msg.chat_id_) == "channel" thenlocal function group_info(arg, data)local hash = "gp_lang:"..arg.chat_idlocal lang = redis:get(hash)if not lang thenginfo = "*Group Info :*\n_Admin Count :_ *"..data.administrator_count_.."*\n_Member Count :_ *"..data.member_count_.."*\n_Kicked Count :_ *"..data.kicked_count_.."*\n_Group ID :_ *"..data.channel_.id_.."*"print(serpent.block(data))elseif lang thenginfo = "*اطلاعات گروه :*\n_تعداد مدیران :_ *"..data.administrator_count_.."*\n_تعداد اعضا :_ *"..data.member_count_.."*\n_تعداد اعضای حذف شده :_ *"..data.kicked_count_.."*\n_شناسه گروه :_ *"..data.channel_.id_.."*"print(serpent.block(data))end        tdcli.sendMessage(arg.chat_id, arg.msg_id, 1, ginfo, 1, 'md')end tdcli.getChannelFull(msg.chat_id_, group_info, {chat_id=msg.chat_id_,msg_id=msg.id_})end  if matches[1] == 'setlink' and is_owner(msg) then   data[tostring(chat)]['settings']['linkgp'] = 'waiting'   save_data(_config.moderation.data, data)      if not lang then   return '_Please send the new group_ *link* _now_'    else          return 'لطفا لینک گروه خود را ارسال کنید'       end  end  if msg.content_.text_ then   local is_link = msg.content_.text_:match("^([https?://w]*.?telegram.me/joinchat/%S+)$") or msg.content_.text_:match("^([https?://w]*.?t.me/joinchat/%S+)$")   if is_link and data[tostring(chat)]['settings']['linkgp'] == 'waiting' and is_owner(msg) then    data[tostring(chat)]['settings']['linkgp'] = msg.content_.text_    save_data(_config.moderation.data, data)            if not lang then    return "*Newlink* _has been set_"           else           return "لینک جدید ذخیره شد"    end       end  end    if matches[1] == 'link' and is_mod(msg) then      local linkgp = data[tostring(chat)]['settings']['linkgp']      if not linkgp then      if not lang then        return "_First set a link for group with using_ /setlink"     else        return "اول لینک گروه خود را ذخیره کنید با /setlink"      end      end     if not lang then       text = "<b>Group Link :</b>\n"..linkgp     else      text = "<b>لینک گروه :</b>\n"..linkgp         end        return tdcli.sendMessage(chat, msg.id_, 1, text, 1, 'html')     end  if matches[1] == "setrules" and matches[2] and is_mod(msg) then    data[tostring(chat)]['rules'] = matches[2]   save_data(_config.moderation.data, data)     if not lang then    return "*Group rules* _has been set_"   else   return "قوانین گروه ثبت شد"   end  end  if matches[1] == "rules" then if not data[tostring(chat)]['rules'] then   if not lang then     rules = "ℹ️ The Default Rules :\n1⃣ No Flood.\n2⃣ No Spam.\n3⃣ No Advertising.\n4⃣ Try to stay on topic.\n5⃣ Forbidden any racist, sexual, homophobic or gore content.\n➡️ Repeated failure to comply with these rules will cause ban.\n@BeyondTeam"    elseif lang then       rules = "ℹ️ قوانین پپیشفرض:\n1⃣ ارسال پیام مکرر ممنوع.\n2⃣ اسپم ممنوع.\n3⃣ تبلیغ ممنوع.\n4⃣ سعی کنید از موضوع خارج نشید.\n5⃣ هرنوع نژاد پرستی, شاخ بازی و پورنوگرافی ممنوع .\n➡️ از قوانین پیروی کنید, در صورت عدم رعایت قوانین اول اخطار و در صورت تکرار مسدود.\n@BeyondTeam" end        else     rules = "*Group Rules :*\n"..data[tostring(chat)]['rules']      end    return rules  endif matches[1] == "res" and matches[2] and is_mod(msg) then    tdcli_function ({      ID = "SearchPublicChat",      username_ = matches[2]    }, action_by_username, {chat_id=msg.chat_id_,username=matches[2],cmd="res"})  endif matches[1] == "whois" and matches[2] and is_mod(msg) thentdcli_function ({    ID = "GetUser",    user_id_ = matches[2],  }, action_by_id, {chat_id=msg.chat_id_,user_id=matches[2],cmd="whois"})  end  if matches[1] == 'setflood' and is_mod(msg) then   if tonumber(matches[2]) < 1 or tonumber(matches[2]) > 50 then    return "_Wrong number, range is_ *[1-50]*"      end   local flood_max = matches[2]   data[tostring(chat)]['settings']['num_msg_max'] = flood_max   save_data(_config.moderation.data, data)    return "_Group_ *flood* _sensitivity has been set to :_ *[ "..matches[2].." ]*"       end  if matches[1]:lower() == 'clean' and is_owner(msg) then   if matches[2] == 'mods' then    if next(data[tostring(chat)]['mods']) == nil then            if not lang then     return "_No_ *moderators* _in this group_"             else                return "هیچ مدیری برای گروه انتخاب نشده است"    end            end    for k,v in pairs(data[tostring(chat)]['mods']) do     data[tostring(chat)]['mods'][tostring(k)] = nil     save_data(_config.moderation.data, data)    end            if not lang then    return "_All_ *moderators* _has been demoted_"          else            return "تمام مدیران گروه تنزیل مقام شدند"   end         end   if matches[2] == 'filterlist' then    if next(data[tostring(chat)]['filterlist']) == nil then     if not lang then     return "*Filtered words list* _is empty_"         else     return "_لیست کلمات فیلتر شده خالی است_"             end    end    for k,v in pairs(data[tostring(chat)]['filterlist']) do     data[tostring(chat)]['filterlist'][tostring(k)] = nil     save_data(_config.moderation.data, data)    end       if not lang then    return "*Filtered words list* _has been cleaned_"           else    return "_لیست کلمات فیلتر شده پاک شد_"           end   end   if matches[2] == 'rules' then    if not data[tostring(chat)]['rules'] then            if not lang then     return "_No_ *rules* _available_"             else               return "قوانین برای گروه ثبت نشده است"             end    end     data[tostring(chat)]['rules'] = nil     save_data(_config.moderation.data, data)             if not lang then    return "*Group rules* _has been cleaned_"          else            return "قوانین گروه پاک شد"   end       end   if matches[2] == 'welcome' then    if not data[tostring(chat)]['setwelcome'] then            if not lang then     return "*Welcome Message not set*"             else               return "پیام خوشآمد گویی ثبت نشده است"             end    end     data[tostring(chat)]['setwelcome'] = nil     save_data(_config.moderation.data, data)             if not lang then    return "*Welcome message* _has been cleaned_"          else            return "پیام خوشآمد گویی پاک شد"   end       end   if matches[2] == 'about' then        if gp_type(chat) == "chat" then    if not data[tostring(chat)]['about'] then            if not lang then     return "_No_ *description* _available_"            else              return "پیامی مبنی بر درباره گروه ثبت نشده است"          end    end     data[tostring(chat)]['about'] = nil     save_data(_config.moderation.data, data)        elseif gp_type(chat) == "channel" then   tdcli.changeChannelAbout(chat, "", dl_cb, nil)             end             if not lang then    return "*Group description* _has been cleaned_"           else              return "پیام مبنی بر درباره گروه پاک شد"             end      end        end  if matches[1]:lower() == 'clean' and is_admin(msg) then   if matches[2] == 'owners' then    if next(data[tostring(chat)]['owners']) == nil then             if not lang then     return "_No_ *owners* _in this group_"            else                return "مالکی برای گروه انتخاب نشده است"            end    end    for k,v in pairs(data[tostring(chat)]['owners']) do     data[tostring(chat)]['owners'][tostring(k)] = nil     save_data(_config.moderation.data, data)    end            if not lang then    return "_All_ *owners* _has been demoted_"           else            return "تمامی مالکان گروه تنزیل مقام شدند"          end   end     endif matches[1] == "setname" and matches[2] and is_mod(msg) thenlocal gp_name = matches[2]tdcli.changeChatTitle(chat, gp_name, dl_cb, nil)end  if matches[1] == "setabout" and matches[2] and is_mod(msg) then     if gp_type(chat) == "channel" then   tdcli.changeChannelAbout(chat, matches[2], dl_cb, nil)    elseif gp_type(chat) == "chat" then    data[tostring(chat)]['about'] = matches[2]   save_data(_config.moderation.data, data)     end     if not lang then    return "*Group description* _has been set_"    else     return "پیام مبنی بر درباره گروه ثبت شد"      end  end  if matches[1] == "about" and gp_type(chat) == "chat" then if not data[tostring(chat)]['about'] then     if not lang then     about = "_No_ *description* _available_"      elseif lang then      about = "پیامی مبنی بر درباره گروه ثبت نشده است"       end        else     about = "*Group Description :*\n"..data[tostring(chat)]['about']      end    return about  end  if matches[1] == 'filter' and is_mod(msg) then    return filter_word(msg, matches[2])  end  if matches[1] == 'unfilter' and is_mod(msg) then    return unfilter_word(msg, matches[2])  end  if matches[1] == 'filterlist' and is_mod(msg) then    return filter_list(msg)  endif matches[1] == "settings" thenreturn group_settings(msg, target)endif matches[1] == "modlist" thenreturn modlist(msg)endif matches[1] == "ownerlist" and is_owner(msg) thenreturn ownerlist(msg)endif matches[1] == "setlang" and is_owner(msg) then   if matches[2] == "en" thenlocal hash = "gp_lang:"..msg.chat_id_local lang = redis:get(hash) redis:del(hash)return "_Group Language Set To:_ EN"  elseif matches[2] == "fa" thenredis:set(hash, true)return "*زبان گروه تنظیم شد به : فارسی*"endendif matches[1] == "help" and is_mod(msg) thenif not lang thentext = [[*Bot Commands:*👑*!setowner* `[username|id|reply]` _Set Group Owner(Multi Owner)_👑*!remowner* `[username|id|reply]`  _Remove User From Owner List_🤖*!promote* `[username|id|reply]` _Promote User To Group Admin_🤖*!demote* `[username|id|reply]` _Demote User From Group Admins List_🗣*!setflood* `[1-50]`_Set Flooding Number_🔇*!silent* `[username|id|reply]` _Silent User From Group_🔊*!unsilent* `[username|id|reply]` _Unsilent User From Group_👽*!kick* `[username|id|reply]` _Kick User From Group_👽*!ban* `[username|id|reply]` _Ban User From Group_👽*!unban* `[username|id|reply]` _UnBan User From Group_🔹*!res* `[username]`_Show User ID_🔹*!id* `[reply]`_Show User ID_🔹*!whois* `[id]`_Show User's Username And Name_🔒*!lock* `[link | tag | arabic | edit | fosh | webpage | bots | spam | flood | markdown | mention]`_If This Actions Lock, Bot Check Actions And Delete Them_🔓*!unlock* `[link | tag | arabic | edit | fosh | webpage | bots | spam | flood | markdown | mention]`_If This Actions Unlock, Bot Not Delete Them_🔕*!mute* `[gifs | photo | tgservice | document | sticker | video | text | forward | location | audio | voice | contact | all]`_If This Actions Lock, Bot Check Actions And Delete Them_🔔*!unmute* `[gif | photo | tgservice | document | sticker | video | tgservice | text | forward | inline | location | audio | voice | contact | all]`_If This Actions Unlock, Bot Not Delete Them_🔹*!set*`[rules | name | photo | link | about]`_Bot Set Them_🔹*!clean* `[bans | mods | bots | rules | about | silentlist]`   _Bot Clean Them_🔹*!pin* `[reply]`_Pin Your Message_🔹*!unpin* _Unpin Pinned Message_🛡*!settings*_Show Group Settings_🔕*!mutelist*_Show Mutes List_🔕*!silentlist*_Show Silented Users List_🔕*!banlist*_Show Banned Users List_👑*!ownerlist*_Show Group Owners List_ 🤖*!modlist* _Show Group Moderators List_🎖*!rules*_Show Group Rules_⚜*!gpinfo*_Show Group Information_⚜*!link*_Show Group Link_🔇*!mt 0 1* (0h 1m)🔊*!unmt*_Mute All With Time_🚫*!filter* 🚫*!unfilter* _filter word_🚫*!filterlist* _Show Filter List_〰〰〰〰〰♻️*!del* 1-100♻️*!delall* `[reply]`_Delete Message_〰〰〰〰〰⏱*!setexpire*  30⏱*!expire*_set expire for group_〰〰〰〰〰🎗*!setwelcome* متن پیام➕*!welcome enable*➖*!welcome disable*_set welcome for group_〰〰〰〰〰_You Can Use_ *[!/#]* _To Run The Commands__This Help List Only For_ *Moderators/Owners!*_Its Means, Only Group_ *Moderators/Owners* _Can Use It!_*Good luck ;)*]]elseif lang thentext = [[*دستورات ربات :**!setowner* `[username|id|reply]` _انتخاب مالک گروه(قابل انتخاب چند مالک)_*!remowner* `[username|id|reply]`  _حذف کردن فرد از فهرست مالکان گروه_*!promote* `[username|id|reply]` _ارتقا مقام کاربر به مدیر گروه_*!demote* `[username|id|reply]` _تنزیل مقام مدیر به کاربر_*!setflood* `[1-50]`_تنظیم حداکثر تعداد پیام مکرر_*!silent* `[username|id|reply]` _بیصدا کردن کاربر در گروه_*!unsilent* `[username|id|reply]` _در آوردن کاربر از حالت بیصدا در گروه_*!kick* `[username|id|reply]` _حذف کاربر از گروه_*!ban* `[username|id|reply]` _مسدود کردن کاربر از گروه_*!unban* `[username|id|reply]` _در آوردن از حالت مسدودیت کاربر از گروه_*!res* `[username]`_نمایش شناسه کاربر_*!id* `[reply]`_نمایش شناسه کاربر_*!whois* `[id]`_نمایش نام کاربر, نام کاربری و اطلاعات حساب_*!lock* `[link | tag | edit | arabic | webpage | bots | spam | flood | markdown | mention]`_در صورت قفل بودن فعالیت ها, ربات آنهارا حذف خواهد کرد_*!unlock* `[link | tag | edit | arabic | webpage | bots | spam | flood | markdown | mention]`_در صورت قفل نبودن فعالیت ها, ربات آنهارا حذف نخواهد کرد_*!mute* `[gif | photo | document | sticker | video | text | forward | location | audio | voice | contact | all]`_در صورت بیصدد بودن فعالیت ها, ربات آنهارا حذف خواهد کرد_*!unmute* `[gif | photo | document | sticker | video | text | forward | location | audio | voice | contact | all]`_در صورت بیصدا نبودن فعالیت ها, ربات آنهارا حذف نخواهد کرد_*!set*`[rules | name | photo | link | about | welcome]`_ربات آنهارا ثبت خواهد کرد_*!clean* `[bans | mods | bots | rules | about | silentlist | filterlist | welcome]`   _ربات آنهارا پاک خواهد کرد_*!filter* `[word]`_فیلتر‌کلمه مورد نظر_*!unfilter* `[word]`_ازاد کردن کلمه مورد نظر_*!pin* `[reply]`_ربات پیام شمارا در گروه سنجاق خواهد کرد_*!unpin* _ربات پیام سنجاق شده در گروه را حذف خواهد کرد_*!settings*_نمایش تنظیمات گروه_*!silentlist*_نمایش فهرست افراد بیصدا_*!filterlist*_نمایش لیست کلمات فیلتر شده_*!banlist*_نمایش افراد مسدود شده از گروه_*!ownerlist*_نمایش فهرست مالکان گروه_ *!modlist* _نمایش فهرست مدیران گروه_*!rules*_نمایش قوانین گروه_*!about*_نمایش درباره گروه_*!id*_نمایش شناسه شما و گروه_*!gpinfo*_نمایش اطلاعات گروه_*!link*_نمایش لینک گروه_*!setwelcome [text]*_ثبت پیام خوش آمد گویی__شما میتوانید از [!/#] در اول دستورات برای اجرای آنها بهره بگیریداین راهنما فقط برای مدیران/مالکان گروه میباشد!این به این معناست که فقط مدیران/مالکان گروه میتوانند از دستورات بالا استفاده کنند!_*موفق باشید ;)*]]endreturn textend--------------------- Welcome ----------------------- if matches[1] == "welcome" and is_mod(msg) then  if matches[2] == "enable" then   welcome = data[tostring(chat)]['settings']['welcome']   if welcome == "yes" then       if not lang then    return "_Group_ *welcome* _is already enabled_"       elseif lang then    return "_خوشآمد گویی از قبل فعال بود_"           end   else  data[tostring(chat)]['settings']['welcome'] = "yes"     save_data(_config.moderation.data, data)       if not lang then    return "_Group_ *welcome* _has been enabled_"       elseif lang then    return "_خوشآمد گویی فعال شد_"          end   end  end    if matches[2] == "disable" then   welcome = data[tostring(chat)]['settings']['welcome']   if welcome == "no" then      if not lang then    return "_Group_ *Welcome* _is already disabled_"      elseif lang then    return "_خوشآمد گویی از قبل فعال نبود_"         end   else  data[tostring(chat)]['settings']['welcome'] = "no"     save_data(_config.moderation.data, data)      if not lang then    return "_Group_ *welcome* _has been disabled_"      elseif lang then    return "_خوشآمد گویی غیرفعال شد_"          end   end  end end if matches[1] == "setwelcome" and matches[2] and is_mod(msg) then  data[tostring(chat)]['setwelcome'] = matches[2]     save_data(_config.moderation.data, data)       if not lang then  return "_Welcome Message Has Been Set To :_\n*"..matches[2].."*\n\n*You can use :*\n_{rules} ➣ Show Group Rules_\n_{name} ➣ New Member First Name_\n_{username} ➣ New Member Username_"       else  return "_پیام خوشآمد گویی تنظیم شد به :_\n*"..matches[2].."*\n\n*شما میتوانید از*\n_{rules} ➣ نمایش قوانین گروه_\n_{name} ➣ نام کاربر جدید_\n_{username} ➣ نام کاربری کاربر جدید_\n_استفاده کنید_"     end endend-----------------------------------------local function pre_process(msg)   local chat = msg.chat_id_   local user = msg.sender_user_id_ local data = load_data(_config.moderation.data) local function welcome_cb(arg, data)local hash = "gp_lang:"..arg.chat_idlocal lang = redis:get(hash)  administration = load_data(_config.moderation.data)    if administration[arg.chat_id]['setwelcome'] then     welcome = administration[arg.chat_id]['setwelcome']      else     if not lang then     welcome = "*Welcome Dude*"    elseif lang then     welcome = "_خوش آمدید_"        end     end if administration[tostring(arg.chat_id)]['rules'] thenrules = administration[arg.chat_id]['rules']else   if not lang then     rules = "ℹ️ The Default Rules :\n1⃣ No Flood.\n2⃣ No Spam.\n3⃣ No Advertising.\n4⃣ Try to stay on topic.\n5⃣ Forbidden any racist, sexual, homophobic or gore content.\n➡️ Repeated failure to comply with these rules will cause ban.\n@MahDiRoO"    elseif lang then       rules = "ℹ️ قوانین پپیشفرض:\n1⃣ ارسال پیام مکرر ممنوع.\n2⃣ اسپم ممنوع.\n3⃣ تبلیغ ممنوع.\n4⃣ سعی کنید از موضوع خارج نشید.\n5⃣ هرنوع نژاد پرستی, شاخ بازی و پورنوگرافی ممنوع .\n➡️ از قوانین پیروی کنید, در صورت عدم رعایت قوانین اول اخطار و در صورت تکرار مسدود.\n@MahDiRoO" endendif data.username_ thenuser_name = "@"..check_markdown(data.username_)elseuser_name = ""end  local welcome = welcome:gsub("{rules}", rules)  local welcome = welcome:gsub("{name}", check_markdown(data.first_name_))  local welcome = welcome:gsub("{username}", user_name)  tdcli.sendMessage(arg.chat_id, arg.msg_id, 0, welcome, 0, "md") end if data[tostring(chat)] and data[tostring(chat)]['settings'] then if msg.adduser then  welcome = data[tostring(msg.chat_id_)]['settings']['welcome']  if welcome == "yes" then   tdcli_function ({       ID = "GetUser",       user_id_ = msg.adduser     }, welcome_cb, {chat_id=chat,msg_id=msg.id_})  else   return false  end end if msg.joinuser then  welcome = data[tostring(msg.chat_id_)]['settings']['welcome']  if welcome == "yes" then   tdcli_function ({       ID = "GetUser",       user_id_ = msg.joinuser     }, welcome_cb, {chat_id=chat,msg_id=msg.id_})  else   return false        end  end end endreturn {patterns ={"^[!/#](idd)$","^[!/#](idd) (.*)$","^[!/#](pin)$","^[!/#](unpin)$","^[!/#](gpinfo)$","^[!/#](test)$","^[!/#](add)$","^[!/#](rem)$","^[!/#](setowner)$","^[!/#](setowner) (.*)$","^[!/#](remowner)$","^[!/#](remowner) (.*)$","^[!/#](promote)$","^[!/#](promote) (.*)$","^[!/#](demote)$","^[!/#](demote) (.*)$","^[!/#](modlist)$","^[!/#](ownerlist)$","^[!/#](lock) (.*)$","^[!/#](unlock) (.*)$","^[!/#](settings)$","^[!/#](mute) (.*)$","^[!/#](unmute) (.*)$","^[!/#](link)$","^[!/#](setlink)$","^[!/#](rules)$","^[!/#](setrules) (.*)$","^[!/#](about)$","^[!/#](setabout) (.*)$","^[!/#](setname) (.*)$","^[!/#](clean) (.*)$","^[!/#](setflood) (%d+)$","^[!/#](res) (.*)$","^[!/#](whois) (%d+)$","^[!/#](help)$","^[!/#](setlang) (.*)$","^[#!/](filter) (.*)$","^[#!/](unfilter) (.*)$","^[#!/](filterlist)$","^([https?://w]*.?t.me/joinchat/%S+)$","^([https?://w]*.?telegram.me/joinchat/%S+)$","^[!/#](setwelcome) (.*)","^[!/#](welcome) (.*)$"},run=run,pre_process = pre_process}
